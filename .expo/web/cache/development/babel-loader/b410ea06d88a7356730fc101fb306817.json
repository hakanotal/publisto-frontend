{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isKeyboardShown = _React$useState2[0],\n    setIsKeyboardShown = _React$useState2[1];\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n    var subscriptions;\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardShow), Keyboard.addListener('keyboardWillHide', handleKeyboardHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardShow), Keyboard.addListener('keyboardDidHide', handleKeyboardHide)];\n    }\n    return function () {\n      subscriptions.forEach(function (s) {\n        return s.remove();\n      });\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAGA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,sBAA8CD,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9C;IAAA;IAAOC,eAAD;IAAkBC,kBAAlB;EAENJ,KAAK,CAACK,SAAN,CAAgB,YAAM;IACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASF,kBAAkB,CAAC,IAAD,CAAnD;IAAA;IACA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASH,kBAAkB,CAAC,KAAD,CAAnD;IAAA;IAEA,IAAII,aAAJ;IAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzBF,aAAa,GAAG,CACdG,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCN,kBAAzC,CADc,EAEdK,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC,CAFc,CAAhB;IAID,CALD,MAKO;MACLC,aAAa,GAAG,CACdG,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCN,kBAAxC,CADc,EAEdK,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC,CAFc,CAAhB;IAID;IAED,OAAO,YAAM;MACXC,aAAa,CAACK,OAAd,CAAuBC,WAAD;QAAA,OAAOA,CAAC,CAACC,MAAF,EAA7B;MAAA;IACD,CAFD;EAGD,CArBD,EAqBG,EArBH;EAuBA,OAAOZ,eAAP;AACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","Platform","OS","Keyboard","addListener","forEach","s","remove"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}