{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n  var state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    insets = _ref3.insets,\n    style = _ref3.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n    _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n    tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n    tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n    tabBarStyle = focusedOptions.tabBarStyle,\n    tabBarBackground = focusedOptions.tabBarBackground,\n    tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n    tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = useSafeAreaFrame();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? label + \", tab, \" + (index + 1) + \" of \" + routes.length : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) !== null && _options$tabBarIcon !== void 0 ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n          size = _ref5.size;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"mappings":"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","names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","style","rest","customHeight","_StyleSheet$flatten","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","_ref3","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","useState","isTabBarHidden","setIsTabBarHidden","Animated","Value","visible","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","_visibilityAnimationC2","config","start","finished","_ref4","hide","_visibilityAnimationC4","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","color","_ref5","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}